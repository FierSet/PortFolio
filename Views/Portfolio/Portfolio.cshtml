<div class="element-center">

    <div class="main-content">

        <nav class="navbar-card" id="navbar-card">
            <partial name="_navbarcard" model=Model />
        </nav>

        <div class="info-card" id="partialContainer">
            <partial name="./sheets/@Model.SelectedPartial" model=Model.PortFolioModel/>
        </div>

        <script>
            function bindLoadPartialLinks() {
                document.querySelectorAll(".load-partial").forEach(function(link) 
                {
                    // Remove previous click handlers if needed (optional)
                    link.removeEventListener("click", handlePartialClick);
                    link.addEventListener("click", handlePartialClick);
                });
            }

            function handlePartialClick(event) 
            {
                event.preventDefault();

                const partialName = this.getAttribute("data-partial");
                // Load partial view
                fetch(`/Portfolio/ChangePartialView?PartialName=${partialName}`)
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById("partialContainer").innerHTML = html;
                        bindLoadPartialLinks(); // Rebind after DOM update
                    }).catch(err => console.error("Error loading partial:", err));
                // Load navbar card
                fetch(`/Portfolio/GetNavbarCard?PartialName=${partialName}`)
                    .then(response => response.text())
                    .then(navHtml => {
                        document.getElementById("navbar-card").innerHTML = navHtml;
                        bindLoadPartialLinks(); // Rebind again if navbar has links
                    }).catch(err => console.error("Error loading partial:", err));
            }
            // Initial binding on page load
            document.addEventListener("DOMContentLoaded", bindLoadPartialLinks);
        </script>

    </div>

    <div class="user-card">
        <div class="avatar-zone">
            <img class="avatar" src="@Model.PortFolioModel.Contacts[0].Img" alt="Portfolio Image" class="img-fluid" />
            <div class="name-prof">
                <p class = "name">@Model.PortFolioModel.Contacts[0].Name</p>
                <p class="profession">@Model.PortFolioModel.Contacts[0].Profession</p>
            </div>

            <div class="contact-zone">

                <div class="infocontact">
                    <i class="hgi hgi-stroke hgi-mail-01 icon-avatar"></i>
                    <div class="contact-text">
                        <p class="label-contact">Email</p>
                        <a class="label-contact-value" href="mailto:@Model.PortFolioModel.Contacts[0].Email">@Model.PortFolioModel.Contacts[0].Email</a>
                    </div>
                </div>

                <div class="infocontact">
                    <i class="hgi hgi-stroke hgi-location-03 icon-avatar"></i>
                    <div class="contact-text">
                        <p class="label-contact">Location</p>
                        <a class="label-contact-value">@Model.PortFolioModel.Contacts[0].Location</a>
                    </div>
                </div>

            </div>

            <div class="lick-social">
                @foreach(var link in Model.PortFolioModel.Links_social)
                {
                    <a class="social-link-icon" href="@link.Link" target="_blank"> 
                        <i class="@(link.Name != "Main web" ? "fa-brands fa-" + link.Name.ToLower().Replace(" ", "") : "fa-solid fa-globe")"></i> 
                    </a>
                }
            </div>

        </div>
        <hr/>
    </div>

    <div id="chat-zone" class="chat-bot hide">

        <div class="title-chat">
            <button id="show-buton" class="show-buton" onclick="hidechat()"> <i class="hgi hgi-stroke hgi-arrow-up-01"></i> </button>
            <div class="title-bot">ChatBot GPT</div>
        </div>
        

        <script>

            function hidechat()
            {
                const chatsite = document.getElementById("chat-zone");
                const buttonchat = document.getElementById("show-buton");
                const icon = buttonchat.querySelector("i");

                if(chatsite.classList.contains("hide"))
                {
                    chatsite.classList.remove("hide");
                    buttonchat.removeChild(icon);
                    buttonchat.innerHTML = `<i class="hgi hgi-stroke hgi-arrow-down-01"></i> `;

                    fetch(`/Portfolio/Showchatbot`)
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById("chat-zone").innerHTML += html;
                    }).catch(err => console.error("Error loading partial:", err));
                }
                else
                {
                    chatsite.classList.add("hide");
                    buttonchat.removeChild(icon);
                    buttonchat.innerHTML = `<i class="hgi hgi-stroke hgi-arrow-up-01"></i>`;

                    const chattext = chatsite.querySelector("#chatting-order");
                    chattext.classList.add("hide");
                    chatsite.removeChild(chattext);
                }
            }

            async function send() 
            {
                const input = document.getElementById("input");
                const chat = document.getElementById("chat");

                const userMsg = input.value;
                chat.innerHTML += 
                `<br/>
                <div class="item-right">
                    <div class='msg'>
                    ${userMsg}
                    </div>
                </div>
                <br/>`;
                input.value = "";

                // Add "typing" animation placeholder
                const typingMsg = document.createElement("div");
                typingMsg.className = "item";
                typingMsg.id = "animation-typing";
                typingMsg.innerHTML = `
                    <div class="icon">
                        <i class="hgi hgi-stroke hgi-chat-gpt"></i>
                    </div>
                    <div class="msg typing">
                        Typing <span class="dots"></span>
                    </div>
                `;
                chat.appendChild(typingMsg);
                chat.scrollTo({ top: chat.scrollHeight, behavior: "smooth" });

                const response = await fetch("/api/Chat/ask",  {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ message: userMsg })
                });

                chat.removeChild(typingMsg);

                const data = await response.json();
                chat.innerHTML += 
                `<div class="item">
                    <div class="icon">
                        <i class="hgi hgi-stroke hgi-chat-gpt"></i>
                    </div>
                    <div class="msg">
                        ${data.response}
                    </div>
                </div>`;

                chat.scrollTo({
                top: chat.scrollHeight,
                behavior: "smooth"
                });
            }
        </script>

    </div>
    
</div>